/* src/app/app/haptic/haptic.module.css */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Roboto+Mono:wght@400;500;700&display=swap');

/* ─── Main Layout & Backgrounds ─── */
.main {
  background-color: #0A0A0A; /* ベースの背景色を濃いグレーに */
  color: var(--kaika-white);
  min-height: 100vh;
  font-family: var(--kaika-font-sans);
  position: relative;
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
  /* z-index: 0; は意図に応じて調整、または削除 */
}

.backgroundVideo {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  object-fit: cover;
  z-index: 0; /* 他の背景要素よりも奥 */
  opacity: 0; /* ★ 初期状態は透明 */
  transition: opacity 1.5s ease-in-out; /* ★ フェードインのためのトランジション */
  /* filter: brightness(0.7); /* Optional: 動画の明るさを調整する場合 */
}

/* isPlaying ステートが true のときに適用されるスタイル */
/* page.tsx の className={`${styles.backgroundVideo} ${isPlaying ? styles.playing : ''}`} に対応 */
.backgroundVideo.playing {
  opacity: 1; /* ★ isPlaying が true になったら動画を表示（不透明に） */
}

/*
  以前の .videoLoaded クラスに基づくスタイルです。
  現在の page.tsx では videoLoaded state は className に直接使われていませんが、
  onCanPlay で true に設定されています。
  もし videoLoaded state を使った別の視覚効果を実装したい場合は、
  この定義を調整して活用できます。
  現状の isPlaying による制御と重複しないように注意してください。
*/
/*
.backgroundVideo.videoLoaded {
  opacity: 1;
}
*/

/* ドットグリッド */
.dotGrid {
  position: fixed;
  inset: 0;
  background-image: radial-gradient(var(--kaika-mid-grey) 0.5px, transparent 0.5px);
  background-size: 15px 15px;
  opacity: 0.08;
  z-index: -2; /* 動画の上、パーティクルの下 */
  pointer-events: none;
}

/* パーティクルエフェクト */
.particleContainer {
  position: fixed;
  inset: 0;
  z-index: -1; /* ドットグリッドの上、コンテンツ要素の下 */
  pointer-events: none;
  overflow: hidden;
}
.particleEffect {
  position: absolute;
  width: 4px;
  height: 4px;
  background-color: var(--haptic-color, rgba(255, 107, 0, .15));
  border-radius: 50%;
  opacity: 0;
  filter: blur(1.5px);
  animation: particle-float 18s infinite ease-in-out alternate;
  transform-origin: center center;
  transition: background-color 0.5s ease;
}
.particleEffect.active {
   opacity: calc(var(--haptic-intensity, 0.5) * 0.7 + 0.1);
   animation-duration: calc(25s / (var(--haptic-intensity, 0.5) + 0.5));
}
/*
  .particleEffect::before, .particleEffect::after は page.tsx 側で
  個別要素としてレンダリングする形に変更したため、ここではコメントアウトします。
  もしCSSで疑似要素を使う場合は、このコメントを解除してください。
*/
/*
.particleEffect::before { content: ''; position: absolute; width: 100%; height: 100%; background: inherit; border-radius: inherit; opacity: inherit; filter: inherit; animation: inherit; animation-delay: -6s; left: 30%; top: 70%; width: 3px; height: 3px; }
.particleEffect::after { content: ''; position: absolute; width: 100%; height: 100%; background: inherit; border-radius: inherit; opacity: inherit; filter: inherit; animation: inherit; animation-delay: -11s; left: 65%; top: 40%; width: 5px; height: 5px; }
*/

@keyframes particle-float {
  0% { transform: translateY(0vh) translateX(0vw) scale(0.8); opacity: 0.1; }
  50% { transform: translateY(-40vh) translateX(8vw) scale(1.1); opacity: 0.7; }
  100% { transform: translateY(0vh) translateX(-8vw) scale(0.8); opacity: 0.1; }
}

/* ─── Header ─── */
.header {
  height: var(--header-height);
  padding: 0 2rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background-color: rgba(10, 10, 10, 0.75);
  backdrop-filter: blur(10px);
  position: sticky;
  top: 0;
  z-index: 100; /* ヘッダーは最前面 */
  border-bottom: 1px solid rgba(255, 107, 0, 0.15);
}

.logoImg { /* Next/Image を使う場合、直接スタイルを適用するか、親要素で制御 */
    /* サイズは Image コンポーネントの width/height props で指定 */
}


/* データコレクターへのリンク */
.dataCollectorLink {
  font-size: 0.9rem;
  font-weight: 600;
  color: var(--kaika-light-grey);
  text-decoration: none;
  padding: 0.4rem 1rem;
  border-radius: 6px;
  transition: color 0.2s ease, background-color 0.2s ease;
  margin-left: auto;
  margin-right: 1.5rem;
  white-space: nowrap;
}
.dataCollectorLink:hover {
  color: var(--kaika-white);
  background-color: rgba(255, 255, 255, 0.1);
}

.walletInfo {
  display: flex;
  align-items: center;
  gap: 1rem;
}
.balanceContainer {
  display: flex;
  gap: 1rem;
  padding: 0.4rem 0.8rem;
  background-color: rgba(255, 255, 255, 0.05);
  border-radius: 8px;
  border: 1px solid rgba(255, 255, 255, 0.08);
}
.balanceItem { display: flex; flex-direction: column; align-items: flex-end; }
.balanceLabel { font-size: 0.7rem; color: var(--kaika-light-grey); text-transform: uppercase; }
.balanceValue { font-weight: 700; font-size: 0.9rem; color: var(--kaika-usdc-blue-light); }
.kaikaBalance { font-weight: 700; font-size: 0.9rem; color: var(--kaika-orange); }
.walletAddress {
  background-color: rgba(255, 255, 255, 0.08); padding: 0.4rem 0.8rem; border-radius: 6px;
  font-size: 0.8rem; font-family: var(--kaika-font-mono); color: var(--kaika-light-grey); cursor: help;
  border: 1px solid rgba(255, 255, 255, 0.1); white-space: nowrap; transition: background-color 0.2s ease;
}
.walletAddress:hover { background-color: rgba(255, 255, 255, 0.15); }

.connectDeviceButton {
  background: rgba(42, 42, 42, 0.8);
  border: 1px solid var(--kaika-mid-grey);
  color: var(--kaika-light-grey);
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-size: 0.85rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  backdrop-filter: blur(5px);
}
.connectDeviceButton:hover:not(:disabled) {
  border-color: var(--kaika-mint-green); color: var(--kaika-mint-green);
  background-color: rgba(0, 255, 163, 0.1); box-shadow: 0 0 8px rgba(0, 255, 163, 0.2);
}
.connectDeviceButton.connected { border-color: var(--kaika-mint-green); color: var(--kaika-mint-green); }
.connectDeviceButton.connecting { cursor: default; opacity: 0.7; border-color: var(--kaika-grey); color: var(--kaika-grey); }
.connectDeviceButton:disabled { opacity: 0.5; cursor: not-allowed; border-color: var(--kaika-grey); color: var(--kaika-grey); }
.connectionSpinner { border: 2px solid rgba(0, 255, 163, 0.3); border-top: 2px solid var(--kaika-mint-green); border-radius: 50%; width: 14px; height: 14px; animation: spin 1s linear infinite; }
@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }

.walletButton {}
.walletButton :global(.wallet-adapter-button-trigger) {
    background-color: var(--kaika-orange) !important; color: var(--kaika-black) !important; border: none !important;
    border-radius: 6px !important; padding: 0.6rem 1rem !important; font-weight: 700 !important;
    font-size: 0.9rem !important; transition: background-color 0.3s ease, transform 0.1s ease !important;
}
.walletButton :global(.wallet-adapter-button-trigger:hover) {
    background-color: var(--kaika-orange-dark) !important; transform: scale(1.03);
}

/* ─── Content Wrapper & Layout ─── */
.contentWrapper {
  flex: 1; display: flex; padding: 2rem 1.5rem;
  max-width: 1600px; width: 100%; margin: 0 auto; gap: 2rem;
  align-items: flex-start; flex-wrap: wrap;
  position: relative; /* Stacking context for children */
  z-index: 1; /* コンテンツが背景要素より手前に来るように */
}

/* ─── Left Panel: Controls + Visualizer ─── */
.controlPanel {
  flex: 1 1 400px; min-width: 360px;
  display: flex; flex-direction: column; gap: 1.5rem;
  position: sticky; top: calc(var(--header-height) + 2rem); align-self: flex-start;
  max-height: calc(100vh - var(--header-height) - 4rem); overflow-y: auto;
  background: rgba(18, 18, 18, 0.8);
  backdrop-filter: blur(16px) saturate(140%); -webkit-backdrop-filter: blur(16px) saturate(140%);
  border-radius: 16px; padding: 1.8rem;
  border: 1px solid rgba(255, 107, 0, 0.15);
  box-shadow: 0 6px 25px rgba(0, 0, 0, 0.35);
  -ms-overflow-style: none; scrollbar-width: none;
  z-index: 2; /* contentWrapper 内で header よりは下だが、背景よりは上 */
}
.controlPanel::-webkit-scrollbar { display: none; }

/* Section Base Style */
.section {
    background: rgba(28, 28, 28, 0.6);
    padding: 1.5rem; border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, 0.05);
}
.section h2 {
    font-size: 1.1rem; font-weight: 600; margin-top: 0; margin-bottom: 1.2rem;
    color: var(--kaika-white); border-bottom: 1px solid rgba(255, 107, 0, 0.2); padding-bottom: 0.6rem;
}

/* Haptic Controls Section */
.controlsGrid { display: grid; grid-template-columns: 1fr; gap: 1.5rem; align-items: center; }
.controlItem { display: flex; flex-direction: column; gap: 0.5rem; }
.sliderLabel { font-size: 0.85rem; color: var(--kaika-light-grey); font-weight: 500; }
.slider { appearance: none; width: 100%; height: 6px; background: rgba(255, 255, 255, 0.1); border-radius: 3px; outline: none; cursor: pointer; transition: background 0.2s ease; }
.slider::-webkit-slider-thumb { appearance: none; width: 16px; height: 16px; background: var(--kaika-orange); border-radius: 50%; cursor: pointer; box-shadow: 0 0 8px var(--kaika-orange-light-glow); }
.slider::-moz-range-thumb { width: 16px; height: 16px; background: var(--kaika-orange); border-radius: 50%; cursor: pointer; border: none; box-shadow: 0 0 8px var(--kaika-orange-light-glow); }
.slider:disabled { cursor: not-allowed; opacity: 0.5; }
.slider:disabled::-webkit-slider-thumb { background: var(--kaika-grey); box-shadow: none; }
.slider:disabled::-moz-range-thumb { background: var(--kaika-grey); box-shadow: none; }
.sliderValue { font-size: 0.8rem; color: var(--kaika-light-grey); text-align: right; font-family: var(--kaika-font-mono); }

/* Visualizer Section */
.visualizer { min-height: 400px; display: flex; flex-direction: column; }
.visualizerContent { margin-top: 1rem; flex-grow: 1; display: flex; flex-direction: column; justify-content: space-between; }
.placeholderText { color: var(--kaika-light-grey); font-style: italic; text-align: center; margin: auto; font-size: 0.9rem; padding: 2rem 0; }
.feelingDetails { margin-bottom: 1.5rem; }
.feelingTitle { display: flex; align-items: baseline; gap: 0.5rem; margin-bottom: 0.5rem; }
.feelingNameLarge { font-size: 1.4rem; font-weight: 700; color: var(--kaika-white); }
.feelingCategoryTag { font-size: 0.7rem; font-weight: 600; padding: 0.15rem 0.4rem; border-radius: 4px; text-transform: uppercase; color: var(--kaika-black); }
.feelingCategoryTag.nature { background-color: rgba(76,175,80,.8); }
.feelingCategoryTag.urban { background-color: rgba(33,150,243,.8); }
.feelingCategoryTag.abstract { background-color: rgba(156,39,176,.8); }
.feelingDescriptionLarge { font-size: 0.9rem; color: var(--kaika-light-grey); line-height: 1.5; }
.attributesGrid { display: grid; grid-template-columns: 1fr; gap: 0.8rem; margin-bottom: 1.5rem; }
.attributeItem { display: flex; align-items: center; gap: 0.8rem; }
.attributeLabel { font-size: 0.8rem; color: var(--kaika-light-grey); width: 70px; text-align: right; flex-shrink: 0; }
.attributeBar { flex-grow: 1; height: 8px; background-color: rgba(255, 255, 255, 0.1); border-radius: 4px; overflow: hidden; }
.attributeFill { height: 100%; background: linear-gradient(90deg, var(--kaika-orange), var(--kaika-orange-dark)); border-radius: 4px; transition: width 0.5s ease-out; }
.temperatureFill { /* Inline style sets color */ }
.attributeValue { font-size: 0.8rem; font-family: var(--kaika-font-mono); color: var(--kaika-white); width: 20px; text-align: right; flex-shrink: 0; }
.playbackControls { margin-top: 1.5rem; text-align: center; }
.playButton { background: var(--kaika-orange); color: var(--kaika-black); border: none; padding: 0.8rem 2rem; border-radius: 25px; font-size: 1rem; font-weight: 700; cursor: pointer; transition: all 0.2s ease; display: inline-flex; align-items: center; justify-content: center; }
.playButton:hover:not(:disabled) { background: var(--kaika-orange-dark); transform: scale(1.05); }
.playButton.playing { background: var(--kaika-mid-grey); color: var(--kaika-white); }
.playButton.playing:hover:not(:disabled) { background: var(--kaika-grey); }
.playButton:disabled { opacity: 0.5; cursor: not-allowed; transform: none !important; background: var(--kaika-dark-grey) !important; }
.hapticZones { display: grid; grid-template-columns: repeat(4, 1fr); gap: 0.5rem; margin-top: 1.5rem; height: 10px; }
.zone { background-color: rgba(255, 255, 255, 0.1); border-radius: 2px; transition: background-color 0.3s ease, box-shadow 0.3s ease; }
.zone.active { background-color: var(--kaika-orange); box-shadow: 0 0 8px var(--kaika-orange-glow); }
.deviceStatus { margin-top: 1.5rem; padding-top: 1rem; border-top: 1px solid rgba(255, 255, 255, 0.1); display: flex; align-items: center; justify-content: center; gap: 0.5rem; font-size: 0.8rem; color: var(--kaika-light-grey); }
.statusIndicator { width: 8px; height: 8px; border-radius: 50%; transition: background-color 0.3s ease, box-shadow 0.3s ease; }
.statusIndicator.connected { background-color: var(--kaika-mint-green); box-shadow: 0 0 5px var(--kaika-mint-green); }
.statusIndicator.disconnected { background-color: var(--kaika-grey); }
.statusText {}
.transmittingText { margin-left: 0.5rem; font-style: italic; opacity: 0.8; color: var(--kaika-orange); }

/* ─── Right Panel: Marketplace / Portfolio / Info ─── */
.contentPanel {
  flex: 2 1 500px;
  display: flex; flex-direction: column; gap: 2rem;
  max-height: calc(100vh - var(--header-height) - 3rem); overflow-y: auto;
  -ms-overflow-style: none; scrollbar-width: none;
  z-index: 2; /* contentWrapper 内で header よりは下だが、背景よりは上 */
}
.contentPanel::-webkit-scrollbar { display: none; }

/* Purchase Status Message */
.statusMessage { padding: 0.8rem 1rem; border-radius: 8px; font-size: 0.9rem; font-weight: 500; margin-bottom: 1rem; border: 1px solid transparent; text-align: center; }
.success { background-color: rgba(0, 255, 163, 0.1); border-color: rgba(0, 255, 163, 0.5); color: var(--kaika-mint-green); }
.error { background-color: rgba(255, 77, 77, 0.1); border-color: rgba(255, 77, 77, 0.5); color: #ff4d4d; }
.pending { background-color: rgba(33, 150, 243, 0.1); border-color: rgba(33, 150, 243, 0.5); color: #5fa9f8; }

/* Section Header */
.sectionHeader { display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem; padding-bottom: 0.8rem; border-bottom: 1px solid rgba(255, 107, 0, 0.15); }
.sectionHeader h2 { font-size: 1.4rem; font-weight: 700; margin: 0; color: var(--kaika-white); }
.toggleViewButton { background: none; border: 1px solid var(--kaika-light-grey); color: var(--kaika-light-grey); padding: 0.4rem 0.8rem; border-radius: 6px; font-size: 0.8rem; cursor: pointer; transition: all 0.2s ease; }
.toggleViewButton:hover { border-color: var(--kaika-white); color: var(--kaika-white); background-color: rgba(255, 255, 255, 0.1); }

/* Category Filters */
.categoryFilters { display: flex; gap: 0.5rem; flex-wrap: wrap; }
.categoryButton { background-color: rgba(255, 255, 255, 0.05); border: 1px solid rgba(255, 255, 255, 0.1); color: var(--kaika-light-grey); padding: 0.4rem 1rem; border-radius: 15px; font-size: 0.8rem; font-weight: 500; cursor: pointer; transition: all 0.2s ease; }
.categoryButton:hover { background-color: rgba(255, 255, 255, 0.1); border-color: rgba(255, 255, 255, 0.2); color: var(--kaika-white); }
.categoryButton.active { background-color: var(--kaika-orange); border-color: var(--kaika-orange); color: var(--kaika-black); font-weight: 600; }

/* Feelings Section */
.section.feelingsSection {}
.feelingsGrid { list-style: none; padding: 0; margin: 0; display: grid; grid-template-columns: repeat(auto-fill, minmax(240px, 1fr)); gap: 1.5rem; }
.feelingGridItem { background: var(--kaika-dark-grey); border-radius: 12px; overflow: hidden; border: 1px solid rgba(255, 107, 0, 0.1); transition: transform 0.3s ease, box-shadow 0.3s ease, border-color 0.3s ease; position: relative; display: flex; flex-direction: column; }
.feelingGridItem:hover { transform: translateY(-5px); box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4); border-color: rgba(255, 107, 0, 0.3); }
.feelingGridItem.selected { border-color: var(--kaika-orange); box-shadow: 0 0 18px var(--kaika-orange-light-glow); }
.feelingGridItem.owned {}
.feelingGridItem.notOwned {}
.feelingGridItem.nature { border-left: 4px solid rgba(76,175,80,.7); }
.feelingGridItem.urban { border-left: 4px solid rgba(33,150,243,.7); }
.feelingGridItem.abstract { border-left: 4px solid rgba(156,39,176,.7); }

.feelingContent { padding: 1.2rem; flex-grow: 1; display: flex; flex-direction: column; justify-content: space-between; }
.feelingInfo { margin-bottom: 1rem; }
.feelingHeader { display: flex; justify-content: space-between; align-items: baseline; margin-bottom: 0.5rem; }
.feelingName { font-size: 1.05rem; font-weight: 600; color: var(--kaika-white); }
.feelingDescription { font-size: 0.85rem; color: var(--kaika-light-grey); margin-bottom: 1rem; line-height: 1.5; flex-grow: 1; }
.feelingMetrics { display: flex; gap: 1rem; font-size: 0.75rem; color: var(--kaika-light-grey); margin-top: 0.5rem; }
.metric { display: flex; gap: 0.3rem; align-items: baseline;}
.metricLabel { font-weight: 500; }
.metricValue { font-family: var(--kaika-font-mono); color: var(--kaika-white); }
.feelingPrice { font-weight: 700; color: var(--kaika-usdc-blue-light); margin-top: 0.5rem; text-align: right; font-size: 0.95rem; }

.buttons { margin-top: auto; padding-top: 1rem; display: flex; justify-content: center; align-items: center; min-height: 40px; }
.loader { border: 3px solid rgba(255, 255, 255, 0.2); border-top: 3px solid var(--kaika-white); border-radius: 50%; width: 20px; height: 20px; animation: spin 0.8s linear infinite; margin: 0 auto; }

.actionButton { background: var(--kaika-mid-grey); color: var(--kaika-light-grey); border: 1px solid #444; padding: 0.6rem 1.2rem; border-radius: 8px; font-size: 0.85rem; font-weight: 600; cursor: pointer; transition: all 0.2s ease; width: 100%; }
.actionButton:hover:not(:disabled) { background: #444; color: var(--kaika-white); border-color: #666; }
.actionButton.selected { background: var(--kaika-orange); color: var(--kaika-black); border-color: var(--kaika-orange); cursor: default; }
.actionButton:disabled { opacity: 0.5; cursor: not-allowed; background: var(--kaika-dark-grey) !important; border-color: #333 !important; color: #777 !important;}

.purchaseButton { background: var(--kaika-usdc-blue); color: var(--white); border: none; padding: 0.6rem 1.2rem; border-radius: 8px; font-size: 0.85rem; font-weight: 600; cursor: pointer; transition: background-color 0.2s ease, opacity 0.2s ease, transform 0.1s ease; width: 100%; }
.purchaseButton:hover:not(:disabled) { background: var(--kaika-usdc-blue-light); transform: scale(1.02); }
.purchaseButton.purchasing { opacity: 0.7; cursor: default; }
.purchaseButton:disabled { opacity: 0.5; cursor: not-allowed; background: var(--kaika-grey); transform: none; }

.nftBadge { position: absolute; top: 0.7rem; right: 0.7rem; background: linear-gradient(45deg, var(--kaika-orange), var(--kaika-orange-dark)); color: var(--kaika-black); font-size: 0.6rem; font-weight: 700; padding: 0.15rem 0.4rem; border-radius: 4px; text-transform: uppercase; cursor: help; box-shadow: 0 1px 3px rgba(0,0,0,0.3); }

.transactionHistory { max-height: 500px; overflow-y: auto; padding-right: 0.5rem; }
.transactionList { list-style: none; padding: 0; margin: 0; }
.transactionItem { display: flex; justify-content: space-between; align-items: center; padding: 0.8rem 0; border-bottom: 1px solid rgba(255, 255, 255, 0.08); gap: 1rem; }
.transactionItem:last-child { border-bottom: none; }
.transactionInfo { display: flex; flex-direction: column; gap: 0.1rem; }
.transactionName { font-size: 0.9rem; font-weight: 500; color: var(--kaika-white); }
.transactionDate { font-size: 0.75rem; color: var(--kaika-light-grey); }
.transactionDetails { display: flex; align-items: center; gap: 1rem; text-align: right; flex-wrap: wrap; justify-content: flex-end; }
.transactionAmount { font-size: 0.9rem; font-weight: 500; color: var(--kaika-usdc-blue-light); font-family: var(--kaika-font-mono); }
.transactionHash { font-size: 0.75rem; color: var(--kaika-light-grey); font-family: var(--kaika-font-mono); text-decoration: none; transition: color 0.2s ease; }
.transactionHash:hover { color: var(--kaika-accent-cyan); }
.transactionStatus { font-size: 0.7rem; font-weight: 600; padding: 0.15rem 0.4rem; border-radius: 4px; text-transform: uppercase; white-space: nowrap; }
.transactionStatus.confirmed { background-color: rgba(0, 255, 163, 0.2); color: var(--kaika-mint-green); }
.transactionStatus.pending { background-color: rgba(33, 150, 243, 0.2); color: #5fa9f8; }
.transactionStatus.failed { background-color: rgba(255, 77, 77, 0.2); color: #ff4d4d; }
.noTransactions { text-align: center; color: var(--kaika-light-grey); font-style: italic; padding: 2rem 0; }

.section.premiumSection { margin-top: 1rem; }
.premiumBanner { background: linear-gradient(45deg, rgba(156,39,176,.2), rgba(0, 255, 255, 0.1)); padding: 1.5rem; border-radius: 12px; text-align: center; border: 1px solid rgba(156,39,176,.5); }
.premiumBanner h3 { margin-top: 0; margin-bottom: 0.5rem; color: var(--kaika-white); font-size: 1.1rem; }
.premiumBanner p { margin-bottom: 1rem; font-size: 0.9rem; color: var(--kaika-light-grey); }
.waitlistButton { background: var(--kaika-white); color: var(--kaika-black); border: none; padding: 0.6rem 1.5rem; border-radius: 20px; font-size: 0.9rem; font-weight: 600; cursor: pointer; transition: transform 0.2s ease, background-color 0.2s ease; }
.waitlistButton:hover { transform: scale(1.05); background-color: #eee; }

.section.contractInfo {}
.contractGrid { display: grid; grid-template-columns: repeat(auto-fit, minmax(180px, 1fr)); gap: 1rem; margin-top: 1rem; }
.contractItem { background-color: rgba(255, 255, 255, 0.03); padding: 0.8rem; border-radius: 8px; }
.contractLabel { display: block; font-size: 0.75rem; color: var(--kaika-light-grey); margin-bottom: 0.2rem; }
.contractValue { display: block; font-size: 0.9rem; font-weight: 500; color: var(--kaika-white); font-family: var(--kaika-font-mono); white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }

@media (max-width: 768px) {
  .header {
    padding: 0 1rem;
    height: calc(var(--header-height) - 10px);
  }
  .walletInfo {
    gap: 0.5rem;
  }
  .balanceContainer {
    display: none;
  }
  .walletAddress {
     font-size: 0.7rem;
     padding: 0.3rem 0.6rem;
  }
  .connectDeviceButton {
    font-size: 0.8rem;
    padding: 0.4rem 0.8rem;
  }
  .walletButton :global(.wallet-adapter-button-trigger) {
     font-size: 0.8rem !important;
     padding: 0.5rem 0.8rem !important;
  }
  .dataCollectorLink {
    font-size: 0.8rem;
    padding: 0.3rem 0.6rem;
    margin-right: 0.8rem;
  }
  .contentWrapper {
    flex-direction: column;
    padding: 1rem;
    gap: 1.5rem;
  }
  .controlPanel {
    position: static;
    flex: none;
    width: 100%;
    max-height: none;
    padding: 1rem;
    order: 2;
    overflow-y: visible;
    -ms-overflow-style: auto;
    scrollbar-width: auto;
  }
  .controlPanel::-webkit-scrollbar { display: block; }
  .section {
    padding: 1rem;
  }
  .section h2 {
     font-size: 1.1rem;
     margin-bottom: 1rem;
     padding-bottom: 0.5rem;
  }
  .visualizer {
    min-height: auto;
  }
  .feelingNameLarge { font-size: 1.2rem; }
  .feelingDescriptionLarge { font-size: 0.85rem; }
  .attributeLabel { width: 60px; font-size: 0.75rem;}
  .attributeValue { font-size: 0.75rem; }
  .playButton { font-size: 0.9rem; padding: 0.6rem 1.5rem;}
  .contentPanel {
     flex: none;
     width: 100%;
     max-height: none;
     order: 1;
     overflow-y: visible;
     -ms-overflow-style: auto;
     scrollbar-width: auto;
  }
   .contentPanel::-webkit-scrollbar { display: block; }
  .sectionHeader {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.8rem;
      padding-bottom: 1rem;
  }
  .sectionHeader h2 { font-size: 1.25rem; }
  .toggleViewButton { font-size: 0.8rem; padding: 0.4rem 0.8rem;}
  .categoryFilters { justify-content: flex-start; }
  .categoryButton { font-size: 0.75rem; padding: 0.3rem 0.8rem;}
  .feelingsGrid {
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
  }
  .feelingGridItem {}
  .feelingName { font-size: 0.9rem; }
  .feelingDescription { font-size: 0.8rem; margin-bottom: 0.8rem; }
  .feelingPrice { font-size: 0.9rem; }
  .actionButton, .purchaseButton { font-size: 0.8rem; padding: 0.5rem 1rem;}
  .nftBadge { font-size: 0.55rem; top: 0.5rem; right: 0.5rem;}
  .transactionItem {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
  }
  .transactionDetails {
      width: 100%;
      justify-content: space-between;
      gap: 0.5rem;
      text-align: left;
  }
  .transactionAmount { font-size: 0.85rem; }
  .transactionHash { font-size: 0.7rem; }
  .transactionStatus { font-size: 0.65rem; }
  .premiumBanner h3 { font-size: 1rem;}
  .premiumBanner p { font-size: 0.85rem;}
  .waitlistButton { font-size: 0.85rem; padding: 0.5rem 1.2rem;}
  .contractGrid {
      grid-template-columns: repeat(2, 1fr);
      gap: 0.8rem;
  }
  .contractLabel { font-size: 0.7rem; }
  .contractValue { font-size: 0.8rem; }
}

@media (max-width: 480px) {
   .header {
     padding: 0 0.8rem;
     height: calc(var(--header-height) - 15px);
   }
   .walletInfo {
      /* .walletAddress { display: none; } */
   }
   .feelingsGrid {
      grid-template-columns: 1fr;
      gap: 0.8rem;
   }
   .controlPanel, .contentPanel, .section {
       padding: 0.8rem;
   }
   .sectionHeader h2 { font-size: 1.1rem; }
}
/* src/components/deviceconnectmodal.module.css */

/* ★★★ オーバーレイの見た目に関するスタイル ★★★ */
/* globals.css の .ReactModal__Overlay で定義したスタイル以外で、
   このモーダル特有のオーバーレイスタイルがあればここに記述。
   通常は globals.css だけで十分な場合が多い。 */
   .modalOverlay {
    /* 例: 特定のフィルターをかけたい場合など */
    /* backdrop-filter: blur(5px); */
  }
  
  /* ★★★ モーダル本体コンテンツの見た目に関するスタイル ★★★ */
  .modalContent {
    text-align: center;
    color: var(--kaika-light-grey, #e0e0e0); /* フォールバックカラー指定 */
    background: var(--kaika-dark-grey, #1a1a1a); /* CSS変数を使う */
    border: 1px solid rgba(255, 255, 255, 0.1); /* 変数化も可 */
    border-radius: 16px;
    width: 90%;
    max-width: 420px;
    padding: 2rem 1.5rem; /* 少し上下のpaddingを増やす例 */
    /* position: relative; は globals.css で設定済み */
    /* overflow: auto; は globals.css で設定済み */
    /* outline: none; は globals.css で設定済み */
    /* border: none; は globals.css で設定済み */
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.4); /* 変数化も可 */
  
    /* ★★★ アニメーション関連 (opacity, transform, transition) は globals.css で指定するため、ここでは不要 ★★★ */
  }
  
  /* --- モーダル内の要素のスタイル --- */
  
  .modalTitle {
    margin-top: 0;
    margin-bottom: 1.8rem; /* タイトル下のマージン調整 */
    font-size: 1.5rem; /* 少し大きく */
    font-weight: 600;
    color: var(--kaika-white, #f0f0f0);
  }
  
  .modalBody {
    margin-bottom: 1rem;
    min-height: 150px; /* コンテンツが少なくても最低限の高さを保つ (3Dモデル表示用) */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center; /* 中身を中央寄せ */
  }
  
  .modalBody p { /* モーダル内のpタグの基本スタイル */
      margin: 1rem 0;
      line-height: 1.6;
      font-size: 0.95rem;
      color: var(--kaika-light-grey);
  }
  
  /* 閉じるボタン (右上) */
  .closeIcon {
    position: absolute;
    top: 12px; /* 位置調整 */
    right: 12px; /* 位置調整 */
    background: none;
    border: none;
    font-size: 2rem; /* サイズ調整 */
    color: #777; /* 少し濃く */
    cursor: pointer;
    padding: 0; /* パディング削除 */
    line-height: 1;
    transition: color 0.2s ease, transform 0.2s ease;
  }
  .closeIcon:hover {
    color: #eee;
    transform: scale(1.1);
  }
  
  /* ---- モーダル内のコンテンツのスタイル (接続ステータス等) ---- */
  
  /* Suspense フォールバックや接続中のローダー用コンテナ */
  .loaderContainer {
    min-height: 150px; /* 最低限の高さを確保 */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: #aaa;
    width: 100%; /* 幅を確保 */
    padding: 1rem 0; /* 上下パディング */
  }
  
  /* スピナーアニメーション */
  .loader {
    border: 4px solid rgba(255, 107, 0, 0.2); /* オレンジベースに */
    border-top: 4px solid var(--kaika-orange);
    border-radius: 50%;
    width: 40px;
    height: 40px;
    animation: spin 1s linear infinite;
    margin-bottom: 1rem;
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  /* 成功・失敗アイコン */
  .successIcon, .errorIcon {
    font-size: 3rem; /* 少し大きく */
    margin-bottom: 0.8rem; /* マージン調整 */
  }
  .successIcon { color: var(--kaika-mint-green, #00FFA3); }
  .errorIcon { color: #ff4d4d; }
  
  /* ボタン共通スタイル */
  .modalBody button {
    display: block; /* block要素に */
    width: 80%; /* 幅を少し狭める */
    max-width: 300px; /* 最大幅 */
    margin: 1.5rem auto 0 auto; /* 上マージンと左右autoで中央寄せ */
    padding: 0.8rem 1rem;
    border-radius: 25px; /* 丸みを強く */
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    border: none; /* ボーダー削除 */
  }
  .modalBody button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  
  /* 個別ボタンスタイル */
  .connectButton {
    background-color: var(--kaika-orange);
    color: var(--kaika-black);
  }
  .connectButton:hover:not(:disabled) {
    background-color: var(--kaika-orange-dark);
    transform: scale(1.03);
  }
  .closeButton { /* Doneボタン */
    background-color: var(--kaika-mint-green); /* 接続成功に合わせる */
    color: var(--kaika-black);
  }
  .closeButton:hover:not(:disabled) {
    background-color: #00e691; /* 少し濃いミント */
     transform: scale(1.03);
  }